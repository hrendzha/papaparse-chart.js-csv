{"version":3,"sources":["../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../node_modules/chart.js/auto/auto.esm.js","index.js"],"names":["fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","noop","uid","id","isNullOrUndef","value","isArray","type","Object","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","undefined","console","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","push","sort","pop","isNumber","n","isNaN","x","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","A","B","C","D","E","F","c","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","ret","hexString","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","exec","rgbString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","Color","constructor","_rgb","_valid","valid","mix","color","weight","me","c1","c2","w2","w1","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","overrides","descriptors","getScope$1","node","split","set","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","_lookup","table","cmp","hi","mid","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","forEach","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","items","Set","add","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Proxy","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","prevValue","subStart","startIsBefore","shouldStart","shouldStop","endIsBefore","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","_fullLoop","doSplitByStyles","baseStyle","readStyle","prevStyle","styleChanged","p0","p0DataIndex","p1DataIndex","_datasetIndex","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","to","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","_top","_bottom","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","hidden","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","getAllScaleValues","_cache","$bar","metas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","startEnd","swap","orig","v2","BarController","iAxisKey","vAxisKey","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","getPixelForDecimal","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","tooltip","title","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","controllers","__proto__","abstract","DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","adapters","_date","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","tickFont","nestedLabel","highestLabelSize","_resolveTickFontOptions","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","error","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","lastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","avNogSpacingRadius","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","prevX","lastY","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","resolveTarget","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","BASE_URL","GLOBAL_MEAN_TEMPERATURE","fetchData","fetch","json","log","getLabelsAndData","years","Year","globTemps","Glob","northHemTemps","NHem","southHemTemps","SHem","drawChart","catch"],"mappings":"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","file":"src.b690012b.js","sourceRoot":"../../src","sourcesContent":["/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const baseStyle = readStyle(line.options);\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle = baseStyle;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex: line._datasetIndex\n      }));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { overrides as $, toPadding as A, each as B, getMaximumSize as C, _getParentNode as D, readUsedSize as E, throttled as F, supportsEventListenerOptions as G, HALF_PI as H, _isDomSupported as I, log10 as J, _factorize as K, finiteOrDefault as L, callback as M, _addGrace as N, toDegrees as O, PI as P, _measureText as Q, _int16Range as R, _alignPixel as S, TAU as T, clipArea as U, renderText as V, unclipArea as W, toFont as X, _toLeftRightCenter as Y, _alignStartEnd as Z, _arrayUnique as _, resolve as a, merge as a0, _capitalize as a1, descriptors as a2, isFunction as a3, _attachContext as a4, _createResolver as a5, _descriptors as a6, mergeIf as a7, uid as a8, debounce as a9, _setMinAndMaxByKey as aA, niceNum as aB, almostWhole as aC, almostEquals as aD, _decimalPlaces as aE, _longestText as aF, _filterBetween as aG, _lookup as aH, getHoverColor as aI, clone$1 as aJ, _merger as aK, _mergerIf as aL, _deprecated as aM, toFontString as aN, splineCurve as aO, splineCurveMonotone as aP, getStyle as aQ, fontString as aR, toLineHeight as aS, PITAU as aT, INFINITY as aU, RAD_PER_DEG as aV, QUARTER_PI as aW, TWO_THIRDS_PI as aX, _angleDiff as aY, retinaScale as aa, clearCanvas as ab, setsEqual as ac, _elementsEqual as ad, getAngleFromPoint as ae, _readValueToProps as af, _updateBezierControlPoints as ag, _computeSegments as ah, _boundSegments as ai, _steppedInterpolation as aj, _bezierInterpolation as ak, _pointInLine as al, _steppedLineTo as am, _bezierCurveTo as an, drawPoint as ao, addRoundedRectPath as ap, toTRBL as aq, toTRBLCorners as ar, _boundSegment as as, _normalizeAngle as at, getRtlAdapter as au, overrideTextDirection as av, _textX as aw, restoreTextDirection as ax, noop as ay, distanceBetweenPoints as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, toPercentage as k, listenArrayEvents as l, toDimension as m, formatNumber as n, _angleBetween as o, isNumber as p, _limitValue as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _lookupByKey as w, getRelativePosition as x, _isPointInArea as y, _rlookupByKey as z };\n","/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import {Chart, registerables} from '../dist/chart.esm';\n\nChart.register(...registerables);\n\nexport default Chart;\n","import './sass/main.scss';\nimport Chart from 'chart.js/auto';\n\n//  https://retool.com/utilities/generate-api-from-csv\nconst BASE_URL = 'https://retoolapi.dev/rXuDhN/data';\nconst GLOBAL_MEAN_TEMPERATURE = 14;\n\nconst context = document.getElementById('myChart').getContext('2d');\n\nfetchData()\n  .then(getLabelsAndData)\n  .then(drawChart)\n  .catch(error => console.log(error));\n\nasync function fetchData() {\n  try {\n    const res = await fetch(BASE_URL);\n    const data = await res.json();\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction getLabelsAndData(data) {\n  return data.reduce(\n    (acc, entry) => {\n      acc.years.push(entry.Year);\n      acc.globTemps.push(Number(entry.Glob) + GLOBAL_MEAN_TEMPERATURE);\n      acc.northHemTemps.push(Number(entry.NHem) + GLOBAL_MEAN_TEMPERATURE);\n      acc.southHemTemps.push(Number(entry.SHem) + GLOBAL_MEAN_TEMPERATURE);\n\n      return acc;\n    },\n    { years: [], globTemps: [], northHemTemps: [], southHemTemps: [] },\n  );\n}\n\nfunction drawChart({ years, globTemps, northHemTemps, southHemTemps }) {\n  new Chart(context, {\n    type: 'line',\n    data: {\n      labels: years,\n      datasets: [\n        {\n          label: '# of Global average temperature',\n          data: globTemps,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)'],\n          borderWidth: 1,\n        },\n        {\n          label: '# of North hemisphere average temperature',\n          data: northHemTemps,\n          backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n          borderColor: ['rgba(54, 162, 235, 1)'],\n          borderWidth: 1,\n        },\n        {\n          label: '# of South hemisphere average temperature',\n          data: southHemTemps,\n          backgroundColor: ['rgba(255, 159, 64, 0.2)'],\n          borderColor: ['rgba(255, 159, 64, 1)'],\n          borderWidth: 1,\n        },\n      ],\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: false,\n          ticks: {\n            callback(value, index, values) {\n              return value + '°C';\n            },\n          },\n        },\n      },\n    },\n  });\n}\n"]}